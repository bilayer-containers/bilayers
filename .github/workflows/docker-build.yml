name: Docker-Build Pipeline

on:
  push:
    branches:
      - main
  # TODO: disable until caching system is implemented
  # pull_request:
  #   types: [opened, reopened, synchronize, ready_for_review, review_requested]
  #   branches:
  #     - main
  workflow_dispatch:

jobs:
  lint-validate-docs:
    name: Lint, Validate, and Generate Docs
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python 3.9
        uses: actions/setup-python@v3
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          pip install linkml

      - name: Lint code with LinkML
        run: |
          chmod +x scripts/lint.sh
          ./scripts/lint.sh

      - name: Validate schema with LinkML
        run: |
          chmod +x scripts/validate.sh
          ./scripts/validate.sh

      - name: Auto generate docs with LinkML
        run: |
          chmod +x scripts/gendoc.sh
          ./scripts/gendoc.sh

  build:
    name: Docker Build
    runs-on: ubuntu-latest
    needs: lint-validate-docs

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python 3.9
        uses: actions/setup-python@v3
        with:
          python-version: 3.9

      - name: Install nox
        run: |
          pip install nox
          # TODO: remove this as a sessiond dependency
          pip install pyyaml

      - name: Run parse,generate and build docker images
        run: |
          chmod +x ./scripts/build_docker.sh
          ./scripts/build_docker.sh

      - name: Run gradio Docker Container
        run: |
          docker run -d -p 8000:7878 --name gradio-container gradio-image
          # Wait for the container to start
          sleep 30
          # Check if the container is running
          curl --fail http://localhost:8000 || (echo "Failed to start the container" && exit 1)

      - name: Verify the Gradio App
        run: curl http://localhost:8000

      - name: Run Jupyter notebook
        run: |
          docker run -d -p 8888:7878 --name jupyter-container jupyter-image
          # Wait for the container to start
          sleep 30
          # Check if the container is running
          curl --fail http://localhost:8888 || (echo "Failed to start the container" && exit 1)
      
      - name: Verify the Jupyter Notebook
        run: curl http://localhost:8888